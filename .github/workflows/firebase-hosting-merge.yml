    # This file defines a GitHub Actions workflow for deploying your React app
    # to Firebase Hosting when changes are merged into the 'main' branch.

    name: Deploy to Firebase Hosting on merge

    on:
      push:
        branches:
          - main # This workflow triggers on pushes to the 'main' branch.

    jobs:
      build_and_deploy:
        runs-on: ubuntu-latest # Specifies the operating system for the job.

        env: # <--- ADD THIS ENV BLOCK
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_MY_APP_ID_FOR_FIRESTORE_PATHS: ${{ secrets.REACT_APP_MY_APP_ID_FOR_FIRESTORE_PATHS }}
          REACT_APP_CONTACT_EMAIL: ${{ secrets.REACT_APP_CONTACT_EMAIL }}
          CI: true # Explicitly set CI to true to ensure warnings are treated as errors, matching local behavior

        steps:
          - name: Checkout code # Step 1: Clones your repository into the workflow environment.
            uses: actions/checkout@v4 # Uses the official GitHub action for checking out code.

          - name: Set up Node.js # Step 2: Sets up the Node.js environment required for your React app.
            uses: actions/setup-node@v4 # Uses the official GitHub action for setting up Node.js.
            with:
              node-version: '20' # Specify the Node.js version your project uses (e.g., '18', '20').

          - name: Install dependencies # Step 3: Installs all project dependencies from package.json.
            run: npm ci # 'npm ci' is used for clean and consistent installs in CI environments.

          - name: Build React app # Step 4: Executes your React application's build script.
            run: npm run build # This command compiles your React code into the 'build' folder.

          - name: Deploy to Firebase Hosting # Step 5: Deploys the built application to Firebase Hosting.
            uses: FirebaseExtended/action-hosting-deploy@v0 # Uses the official Firebase Hosting GitHub Action.
            with:
              repoToken: '${{ secrets.GITHUB_TOKEN }}' # GitHub's built-in token for repository access.   
              firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GIGL_MARKETPLACE_APP }}' # Replace with your actual secret name if different
              channelId: live # Deploys to your live site (default channel).
              projectId: gigl-marketplace-app # Replace with your actual Firebase Project ID.
