    # This file defines a GitHub Actions workflow for deploying your React app
    # to Firebase Hosting when changes are merged into the 'main' branch.

    name: Deploy to Firebase Hosting on merge

    on:
      push:
        branches:
          - main # This workflow triggers on pushes to the 'main' branch.

    jobs:
      build_and_deploy:
        runs-on: ubuntu-latest # Specifies the operating system for the job.

        env: # This env block must be present and complete
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_MY_APP_ID_FOR_FIRESTORE_PATHS: ${{ secrets.REACT_APP_MY_APP_ID_FOR_FIRESTORE_PATHS }}
          REACT_APP_CONTACT_EMAIL: ${{ secrets.REACT_APP_CONTACT_EMAIL }}
          CI: true # Explicitly set CI to true to ensure warnings are treated as errors
          ACTIONS_STEP_DEBUG: true # Keep this for now

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
              node-version: '20'

          - name: Install dependencies
            run: npm ci

          - name: Build React app
            run: npm run build

          # --- Cloud Functions Deployment Steps ---
          - name: Authenticate Firebase CLI (for Functions)
            uses: google-github-actions/auth@v2
            with:
              credentials_json: ${{ secrets.FIREBASE_FUNCTIONS_DEPLOY_KEY }}

          - name: Deploy Cloud Function (via Firebase CLI)
            run: |
              npm install -g firebase-tools # Ensure firebase-tools is available
              # Authenticate using FIREBASE_TOKEN environment variable
              firebase deploy --only functions
            env: # <--- ADD THIS ENV BLOCK FOR THIS STEP ONLY
              FIREBASE_TOKEN: ${{ secrets.FIREBASE_FUNCTIONS_DEPLOY_KEY }} # Pass token as env var

          # --- Firebase Hosting Deployment Step ---
          - name: Deploy to Firebase Hosting
            uses: FirebaseExtended/action-hosting-deploy@v0
            with:
              repoToken: '${{ secrets.GITHUB_TOKEN }}'
              firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_GIGL_MARKETPLACE_APP }}'
              channelId: live
              projectId: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
    